components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
          format: email
        name:
          type: string
        role:
          type: string
          enum: [user, admin]
      example:
        id: 5ebac534954b54139806c112
        email: fake@example.com
        name: fake name
        role: user

    Token:
      type: object
      properties:
        token:
          type: string
        expires:
          type: string
          format: date-time
      example:
        token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg
        expires: 2020-05-12T16:18:04.793Z

    AuthTokens:
      type: object
      properties:
        access:
          $ref: '#/components/schemas/Token'
        refresh:
          $ref: '#/components/schemas/Token'

    Error:
      type: object
      properties:
        code:
          type: number
        message:
          type: string

    Portfolio:
      type: object
      properties:
        id:
          type: string
        user:
          type: string
          format: email
        portfolioType:
          type: string
        profit:
          type: number
        currPortfolioValue:
          type: number
        initialFreeCash:
          type: number
        freeCash:
          type: number
        transactionCost:
          type: number
        currency:
          type: string
          enum: ["USD"]
      example:
        id: 5ebac534954b54139806c112
        user: 619308412ff24d3d28d7fe2b
        portfolioType: personal
        currPortfolioValue: 500.00
        profit: 0
        initialFreeCash: 500.00
        freeCash: 500.00
        transactionCost: 1.50
        currency: USD

    PortfolioValue:
      type: object
      properties:
        id:
          type: string
        portfolioId:
          type: string
        portfolioValue:
          type: number
        dateAdded:
          type: date
      example:
        id: 5ebac534954b54139806c112
        portfolioId: 619308412ff24d3d28d7fe2b
        portfolioValue: 500.00
        dateAdded: 2021-07-26T03:05:35.007Z

    Trade:
      type: object
      properties:
        id:
          type: string
        portfolio:
          type: string
        price:
          type: number
        action:
          type: string
        security:
          type: string
        sharesTraded:
          type: number
        profit:
          type: number
        transactionCost:
          type: number
        dateTraded:
          type: date
        securityCode:
          type: string
      example:
        id: 5ebac534954b54139806c112
        portfolio: 619308412ff24d3d28d7fe2b
        price: 500.00
        action: Purchased
        security: 619308412ff24d3d28d7fe2b
        sharesTraded: 2
        profit: 0
        transactionCost: 1.50
        dateTraded: 2021-07-26T03:05:35.007Z
        securityCode: SHOP

    Security:
      type: object
      properties:
        id:
          type: string
        portfolio:
          type: string
        securityName:
          type: string
        securityCode:
          type: string
        avgPrice:
          type: number
        shares:
          type: number
        totalValue:
          type: number
        lastUpdated:
          type: date
      example:
        id: 5ebac534954b54139806c112
        portfolio: 619308412ff24d3d28d7fe2b
        securityName: Shopify
        securityCode: SHOP
        avgPrice: 500.00
        shares: 2
        totalValue: 1000.00
        lastUpdated: 2021-07-26T03:05:35.007Z

  responses:
    DuplicateEmail:
      description: Email already taken
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: Email already taken
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 401
            message: Please authenticate
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 403
            message: Forbidden
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 404
            message: Not found

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
